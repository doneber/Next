export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae){return {data:{"/intro-to-js/funciones":[{title:F,_path:G,children:[{title:"Sintaxis Básica",_path:"\u002Fintro-to-js\u002Fsintaxis-basica",seen:h},{title:"Tipos de Datos",_path:"\u002Fintro-to-js\u002Ftipos-de-datos",seen:h},{title:"Condicionales",_path:"\u002Fintro-to-js\u002Fcondicionales",seen:h},{title:"Bucles",_path:"\u002Fintro-to-js\u002Fbucles",seen:h},{title:H,_path:I,seen:h},{title:F,_path:G,icon:J,description:K,author:{name:L,url:M}}],icon:J,description:K,author:{name:L,url:M}}],"content-query-DjA78wKhNT":{_path:I,_dir:"intro-to-js",_draft:h,_partial:h,_locale:p,_empty:h,title:H,description:N,body:{type:"root",children:[{type:a,tag:i,props:{},children:[{type:b,value:N}]},{type:a,tag:i,props:{},children:[{type:b,value:"Podemos definir una función que sume dos números de la siguiente manera:"}]},{type:a,tag:j,props:{code:"function sumar(a, b) {\n  return a + b;\n}\n\n",language:w,meta:x},children:[{type:a,tag:y,props:{},children:[{type:a,tag:j,props:{__ignoreMap:p},children:[{type:a,tag:c,props:{class:g,line:z},children:[{type:a,tag:c,props:{class:q},children:[{type:b,value:O}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:k}]},{type:a,tag:c,props:{class:l},children:[{type:b,value:s}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:m}]},{type:a,tag:c,props:{class:e},children:[{type:b,value:n}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:t}]},{type:a,tag:c,props:{class:e},children:[{type:b,value:o}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:P}]}]},{type:a,tag:c,props:{class:g,line:r},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:Q}]},{type:a,tag:c,props:{class:R},children:[{type:b,value:S}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:k}]},{type:a,tag:c,props:{class:e},children:[{type:b,value:n}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:" + "}]},{type:a,tag:c,props:{class:e},children:[{type:b,value:o}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:T}]}]},{type:a,tag:c,props:{class:g,line:U},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:"}"}]}]}]}]}]},{type:a,tag:i,props:{},children:[{type:b,value:"Luego, podemos llamar a esta función y pasarle los valores que queremos sumar:"}]},{type:a,tag:j,props:{code:"let resultado = sumar(3, 4);\nconsole.log(resultado); \u002F\u002F Output: 7\n\n",language:w,meta:x},children:[{type:a,tag:y,props:{},children:[{type:a,tag:j,props:{__ignoreMap:p},children:[{type:a,tag:c,props:{class:g,line:z},children:[{type:a,tag:c,props:{class:q},children:[{type:b,value:A}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:k}]},{type:a,tag:c,props:{class:e},children:[{type:b,value:B}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:C}]},{type:a,tag:c,props:{class:l},children:[{type:b,value:s}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:m}]},{type:a,tag:c,props:{class:u},children:[{type:b,value:V}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:t}]},{type:a,tag:c,props:{class:u},children:[{type:b,value:W}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:X}]}]},{type:a,tag:c,props:{class:g,line:r},children:[{type:a,tag:c,props:{class:e},children:[{type:b,value:Y}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:Z}]},{type:a,tag:c,props:{class:l},children:[{type:b,value:_}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:m}]},{type:a,tag:c,props:{class:e},children:[{type:b,value:B}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:$}]},{type:a,tag:c,props:{class:aa},children:[{type:b,value:"\u002F\u002F Output: 7"}]}]}]}]}]},{type:a,tag:i,props:{},children:[{type:b,value:"En este ejemplo, la función "},{type:a,tag:f,props:{},children:[{type:b,value:s}]},{type:b,value:" recibe dos parámetros "},{type:a,tag:f,props:{},children:[{type:b,value:n}]},{type:b,value:v},{type:a,tag:f,props:{},children:[{type:b,value:o}]},{type:b,value:" y devuelve la suma de ambos. Luego, podemos llamar a la función "},{type:a,tag:f,props:{},children:[{type:b,value:s}]},{type:b,value:ab},{type:a,tag:f,props:{},children:[{type:b,value:V}]},{type:b,value:v},{type:a,tag:f,props:{},children:[{type:b,value:W}]},{type:b,value:" como argumentos. El resultado de esta suma se guarda en la variable "},{type:a,tag:f,props:{},children:[{type:b,value:B}]},{type:b,value:ac}]},{type:a,tag:i,props:{},children:[{type:b,value:"Las funciones también pueden ser anónimas, es decir, no tienen un nombre definido. Por ejemplo:"}]},{type:a,tag:j,props:{code:"let multiplicar = function(a, b) {\n  return a * b;\n}\n\nlet resultado2 = multiplicar(5, 6);\nconsole.log(resultado2); \u002F\u002F Output: 30\n\n",language:w,meta:x},children:[{type:a,tag:y,props:{},children:[{type:a,tag:j,props:{__ignoreMap:p},children:[{type:a,tag:c,props:{class:g,line:z},children:[{type:a,tag:c,props:{class:q},children:[{type:b,value:A}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:k}]},{type:a,tag:c,props:{class:l},children:[{type:b,value:D}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:C}]},{type:a,tag:c,props:{class:q},children:[{type:b,value:O}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:m}]},{type:a,tag:c,props:{class:e},children:[{type:b,value:n}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:t}]},{type:a,tag:c,props:{class:e},children:[{type:b,value:o}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:P}]}]},{type:a,tag:c,props:{class:g,line:r},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:Q}]},{type:a,tag:c,props:{class:R},children:[{type:b,value:S}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:k}]},{type:a,tag:c,props:{class:e},children:[{type:b,value:n}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:" * "}]},{type:a,tag:c,props:{class:e},children:[{type:b,value:o}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:T}]}]},{type:a,tag:c,props:{class:g,line:U},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:"}\n"}]}]},{type:a,tag:c,props:{class:g,line:4},children:[{type:a,tag:c,props:{},children:[{type:b,value:"\n"}]}]},{type:a,tag:c,props:{class:g,line:5},children:[{type:a,tag:c,props:{class:q},children:[{type:b,value:A}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:k}]},{type:a,tag:c,props:{class:e},children:[{type:b,value:E}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:C}]},{type:a,tag:c,props:{class:l},children:[{type:b,value:D}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:m}]},{type:a,tag:c,props:{class:u},children:[{type:b,value:ad}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:t}]},{type:a,tag:c,props:{class:u},children:[{type:b,value:ae}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:X}]}]},{type:a,tag:c,props:{class:g,line:6},children:[{type:a,tag:c,props:{class:e},children:[{type:b,value:Y}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:Z}]},{type:a,tag:c,props:{class:l},children:[{type:b,value:_}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:m}]},{type:a,tag:c,props:{class:e},children:[{type:b,value:E}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:$}]},{type:a,tag:c,props:{class:aa},children:[{type:b,value:"\u002F\u002F Output: 30"}]}]}]}]}]},{type:a,tag:i,props:{},children:[{type:b,value:"En este ejemplo, la función se define como una asignación a una variable. La función recibe dos parámetros "},{type:a,tag:f,props:{},children:[{type:b,value:n}]},{type:b,value:v},{type:a,tag:f,props:{},children:[{type:b,value:o}]},{type:b,value:" y devuelve la multiplicación de ambos. Luego, podemos llamar a la función "},{type:a,tag:f,props:{},children:[{type:b,value:D}]},{type:b,value:ab},{type:a,tag:f,props:{},children:[{type:b,value:ad}]},{type:b,value:v},{type:a,tag:f,props:{},children:[{type:b,value:ae}]},{type:b,value:" como argumentos. El resultado de esta multiplicación se guarda en la variable "},{type:a,tag:f,props:{},children:[{type:b,value:E}]},{type:b,value:ac}]},{type:a,tag:i,props:{},children:[{type:b,value:"Las funciones también pueden ser pasadas como argumentos a otras funciones. Esto se conoce como funciones de orden superior y es un concepto avanzado en JavaScript."}]},{type:a,tag:"style",children:[{type:b,value:".ct-9318c9{color:#6A9955}\n.ct-d56cbd{color:#B5CEA8}\n.ct-efe2a2{color:#C586C0}\n.ct-d66d99{color:#9CDCFE}\n.ct-482560{color:#DCDCAA}\n.ct-4a49cf{color:#D4D4D4}\n.ct-511675{color:#569CD6}"}]}],toc:{title:p,searchDepth:r,depth:r,links:[]}},_type:"markdown",_id:"content:0.Intro-to-js:5.funciones.md",_source:"content",_file:"0.Intro-to-js\u002F5.funciones.md",_extension:"md"}},prerenderedAt:1683862117617}}("element","text","span","ct-4a49cf","ct-d66d99","code-inline","line",false,"p","code"," ","ct-482560","(","a","b","","ct-511675",2,"sumar",", ","ct-d56cbd"," y ","js",null,"pre",1,"let","resultado"," = ","multiplicar","resultado2","Introducción a JavaScript","\u002Fintro-to-js","Funciones","\u002Fintro-to-js\u002Ffunciones","💛","Da igual el lenguaje que manejes hoy. En esta serie de clases aprenderemos la sintaxis necesaria para crear tus primeros algoritmos con este maravilloso lenguaje.","@doneber","https:\u002F\u002Fgithub.com\u002Fdoneber","Las funciones en JavaScript son bloques de código que se pueden llamar y ejecutar en cualquier momento. Estas funciones pueden recibir parámetros y devolver valores. Las funciones son una parte fundamental de la programación en JavaScript y permiten escribir código más modular y reutilizable.","function",") {\n","  ","ct-efe2a2","return",";\n",3,"3","4",");\n","console",".","log","); ","ct-9318c9"," y pasarle los valores "," y se muestra en la consola.","5","6"))