import{l as _,_ as p,K as c}from"./entry.8c8026e7.js";import{q as m,h as o,e as f,j as g}from"./query.cc9eeba1.js";import{w as n,s as u,a as v}from"./utils.529c29d2.js";const C=async t=>{const{content:e}=_().public;typeof(t==null?void 0:t.params)!="function"&&(t=m(t));const s=t.params(),i=e.experimental.stripQueryParameters?n(`/navigation/${`${o(s)}.${e.integrity}`}/${f(s)}.json`):n(`/navigation/${o(s)}.${e.integrity}.json`);if(u())return(await p(()=>import("./client-db.4939e612.js"),["./client-db.4939e612.js","./entry.8c8026e7.js","./entry.68c3a477.css","./utils.529c29d2.js","./query.cc9eeba1.js","./index.a6ef77ff.js"],import.meta.url).then(r=>r.generateNavigation))(s);const a=await $fetch(i,{method:"GET",responseType:"json",params:e.experimental.stripQueryParameters?void 0:{_params:g(s),previewToken:v("previewToken").value}});if(typeof a=="string"&&a.startsWith("<!DOCTYPE html>"))throw new Error("Not found");return a};const w=c("courses",{state:()=>({courseList:{}}),getters:{},actions:{addCourse(t,e){this.courseList={...this.courseList,[t]:e}}}});export{C as f,w as u};
