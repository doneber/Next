export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af){return {data:{"/javascript-for-frameworks/objetos":[{title:F,_path:G,children:[{title:"EcmaScript y JS",_path:"\u002Fjavascript-for-frameworks\u002Fecmascript",seen:h},{title:"Operadores Ternarios",_path:"\u002Fjavascript-for-frameworks\u002Foperadores-ternarios",seen:h},{title:"Expresiones Vs Declaraciones",_path:"\u002Fjavascript-for-frameworks\u002Fexpresiones-vs-declaraciones",seen:h},{title:"Metodos De Arreglos",_path:"\u002Fjavascript-for-frameworks\u002Fmetodos-de-arreglos",seen:h},{title:A,_path:H,seen:h},{title:"Json",_path:"\u002Fjavascript-for-frameworks\u002Fjson",seen:h},{title:"Modulos",_path:"\u002Fjavascript-for-frameworks\u002Fmodulos",seen:h},{title:"Asincronismo",_path:"\u002Fjavascript-for-frameworks\u002Fasincronismo",seen:h},{title:F,_path:G,icon:I,description:J,author:{name:K,url:L}}],icon:I,description:J,author:{name:K,url:L}}],"content-query-lN0NbgSOwM":{_path:H,_dir:"javascript-for-frameworks",_draft:h,_partial:h,_locale:i,_empty:h,title:A,description:M,body:{type:"root",children:[{type:a,tag:"h1",props:{id:"objetos-en-javascript"},children:[{type:c,value:A}]},{type:a,tag:j,props:{},children:[{type:c,value:M}]},{type:a,tag:v,props:{id:N},children:[{type:c,value:O}]},{type:a,tag:j,props:{},children:[{type:c,value:"En JavaScript, los objetos se crean utilizando llaves '{}' y una lista de propiedades separadas por comas. Cada propiedad se compone de una clave y un valor separados por dos puntos. Por ejemplo, podemos crear un objeto 'persona' con las propiedades 'nombre' y 'edad' de la siguiente manera:"}]},{type:a,tag:g,props:{code:"const persona = {\n  nombre: 'Juan',\n  edad: 30\n}\n\n",language:o,meta:p},children:[{type:a,tag:q,props:{},children:[{type:a,tag:g,props:{__ignoreMap:i},children:[{type:a,tag:b,props:{class:e},children:[{type:a,tag:b,props:{class:t},children:[{type:c,value:B}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:k}]},{type:a,tag:b,props:{class:C},children:[{type:c,value:l}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:P}]}]},{type:a,tag:b,props:{class:e},children:[{type:a,tag:b,props:{class:d},children:[{type:c,value:u}]},{type:a,tag:b,props:{class:f},children:[{type:c,value:Q}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:k}]},{type:a,tag:b,props:{class:m},children:[{type:c,value:R}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:D}]}]},{type:a,tag:b,props:{class:e},children:[{type:a,tag:b,props:{class:d},children:[{type:c,value:u}]},{type:a,tag:b,props:{class:f},children:[{type:c,value:S}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:k}]},{type:a,tag:b,props:{class:T},children:[{type:c,value:U}]}]},{type:a,tag:b,props:{class:e},children:[{type:a,tag:b,props:{class:d},children:[{type:c,value:V}]}]}]}]}]},{type:a,tag:j,props:{},children:[{type:c,value:"También podemos agregar nuevas propiedades a un objeto existente utilizando la sintaxis de corchetes '"},{type:a,tag:b,props:{},children:[]},{type:c,value:"':"}]},{type:a,tag:g,props:{code:"persona['profesión'] = 'ingeniero';\n\n",language:o,meta:p},children:[{type:a,tag:q,props:{},children:[{type:a,tag:g,props:{__ignoreMap:i},children:[{type:a,tag:b,props:{class:e},children:[{type:a,tag:b,props:{class:f},children:[{type:c,value:l}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:E}]},{type:a,tag:b,props:{class:m},children:[{type:c,value:"'profesión'"}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:"] = "}]},{type:a,tag:b,props:{class:m},children:[{type:c,value:"'ingeniero'"}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:W}]}]}]}]}]},{type:a,tag:v,props:{id:X},children:[{type:c,value:Y}]},{type:a,tag:j,props:{},children:[{type:c,value:"Para acceder a las propiedades de un objeto, podemos utilizar la sintaxis de punto '.' o la sintaxis de corchetes '"},{type:a,tag:b,props:{},children:[]},{type:c,value:"'. Por ejemplo, para acceder a la propiedad 'nombre' del objeto 'persona', podemos hacer lo siguiente:"}]},{type:a,tag:g,props:{code:"console.log(persona.nombre); \u002F\u002F Juan\nconsole.log(persona['nombre']); \u002F\u002F Juan\n\n",language:o,meta:p},children:[{type:a,tag:q,props:{},children:[{type:a,tag:g,props:{__ignoreMap:i},children:[{type:a,tag:b,props:{class:e},children:[{type:a,tag:b,props:{class:f},children:[{type:c,value:w}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:n}]},{type:a,tag:b,props:{class:r},children:[{type:c,value:x}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:y}]},{type:a,tag:b,props:{class:f},children:[{type:c,value:l}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:n}]},{type:a,tag:b,props:{class:f},children:[{type:c,value:Z}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:"); "}]},{type:a,tag:b,props:{class:z},children:[{type:c,value:_}]}]},{type:a,tag:b,props:{class:e},children:[{type:a,tag:b,props:{class:f},children:[{type:c,value:w}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:n}]},{type:a,tag:b,props:{class:r},children:[{type:c,value:x}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:y}]},{type:a,tag:b,props:{class:f},children:[{type:c,value:l}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:E}]},{type:a,tag:b,props:{class:m},children:[{type:c,value:"'nombre'"}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:$}]},{type:a,tag:b,props:{class:z},children:[{type:c,value:_}]}]}]}]}]},{type:a,tag:j,props:{},children:[{type:c,value:"Podemos utilizar la sintaxis de corchetes cuando el nombre de la propiedad es una expresión o cuando queremos acceder a una propiedad utilizando una variable:"}]},{type:a,tag:g,props:{code:"const propiedad = 'edad';\nconsole.log(persona[propiedad]); \u002F\u002F 30\n\n",language:o,meta:p},children:[{type:a,tag:q,props:{},children:[{type:a,tag:g,props:{__ignoreMap:i},children:[{type:a,tag:b,props:{class:e},children:[{type:a,tag:b,props:{class:t},children:[{type:c,value:B}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:k}]},{type:a,tag:b,props:{class:C},children:[{type:c,value:aa}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:" = "}]},{type:a,tag:b,props:{class:m},children:[{type:c,value:"'edad'"}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:W}]}]},{type:a,tag:b,props:{class:e},children:[{type:a,tag:b,props:{class:f},children:[{type:c,value:w}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:n}]},{type:a,tag:b,props:{class:r},children:[{type:c,value:x}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:y}]},{type:a,tag:b,props:{class:f},children:[{type:c,value:l}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:E}]},{type:a,tag:b,props:{class:f},children:[{type:c,value:aa}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:$}]},{type:a,tag:b,props:{class:z},children:[{type:c,value:"\u002F\u002F 30"}]}]}]}]}]},{type:a,tag:v,props:{id:ab},children:[{type:c,value:ac}]},{type:a,tag:j,props:{},children:[{type:c,value:"Además de las propiedades, los objetos en JavaScript también pueden tener métodos, que son funciones que se definen dentro del objeto y que pueden actuar sobre las propiedades del objeto. Por ejemplo, podemos definir un método 'saludar' en el objeto 'persona':"}]},{type:a,tag:g,props:{code:"const persona = {\n  nombre: 'Juan',\n  edad: 30,\n  saludar: function() {\n    console.log('Hola, mi nombre es ' + this.nombre);\n  }\n}\n\n",language:o,meta:p},children:[{type:a,tag:q,props:{},children:[{type:a,tag:g,props:{__ignoreMap:i},children:[{type:a,tag:b,props:{class:e},children:[{type:a,tag:b,props:{class:t},children:[{type:c,value:B}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:k}]},{type:a,tag:b,props:{class:C},children:[{type:c,value:l}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:P}]}]},{type:a,tag:b,props:{class:e},children:[{type:a,tag:b,props:{class:d},children:[{type:c,value:u}]},{type:a,tag:b,props:{class:f},children:[{type:c,value:Q}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:k}]},{type:a,tag:b,props:{class:m},children:[{type:c,value:R}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:D}]}]},{type:a,tag:b,props:{class:e},children:[{type:a,tag:b,props:{class:d},children:[{type:c,value:u}]},{type:a,tag:b,props:{class:f},children:[{type:c,value:S}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:k}]},{type:a,tag:b,props:{class:T},children:[{type:c,value:U}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:D}]}]},{type:a,tag:b,props:{class:e},children:[{type:a,tag:b,props:{class:d},children:[{type:c,value:u}]},{type:a,tag:b,props:{class:r},children:[{type:c,value:ad}]},{type:a,tag:b,props:{class:f},children:[{type:c,value:":"}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:k}]},{type:a,tag:b,props:{class:t},children:[{type:c,value:"function"}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:"() {"}]}]},{type:a,tag:b,props:{class:e},children:[{type:a,tag:b,props:{class:d},children:[{type:c,value:"    "}]},{type:a,tag:b,props:{class:f},children:[{type:c,value:w}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:n}]},{type:a,tag:b,props:{class:r},children:[{type:c,value:x}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:y}]},{type:a,tag:b,props:{class:m},children:[{type:c,value:"'Hola, mi nombre es '"}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:" + "}]},{type:a,tag:b,props:{class:t},children:[{type:c,value:"this"}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:n}]},{type:a,tag:b,props:{class:f},children:[{type:c,value:Z}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:");"}]}]},{type:a,tag:b,props:{class:e},children:[{type:a,tag:b,props:{class:d},children:[{type:c,value:"  }"}]}]},{type:a,tag:b,props:{class:e},children:[{type:a,tag:b,props:{class:d},children:[{type:c,value:V}]}]}]}]}]},{type:a,tag:j,props:{},children:[{type:c,value:"Para llamar al método 'saludar' del objeto 'persona', podemos hacer lo siguiente:"}]},{type:a,tag:g,props:{code:"persona.saludar(); \u002F\u002F Hola, mi nombre es Juan\n\n",language:o,meta:p},children:[{type:a,tag:q,props:{},children:[{type:a,tag:g,props:{__ignoreMap:i},children:[{type:a,tag:b,props:{class:e},children:[{type:a,tag:b,props:{class:f},children:[{type:c,value:l}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:n}]},{type:a,tag:b,props:{class:r},children:[{type:c,value:ad}]},{type:a,tag:b,props:{class:d},children:[{type:c,value:"(); "}]},{type:a,tag:b,props:{class:z},children:[{type:c,value:"\u002F\u002F Hola, mi nombre es Juan"}]}]}]}]}]},{type:a,tag:v,props:{id:ae},children:[{type:c,value:af}]},{type:a,tag:j,props:{},children:[{type:c,value:"Los objetos en JavaScript son una herramienta poderosa y versátil que nos permite organizar y manipular datos de una manera muy eficiente. Al entender cómo se crean y cómo se accede a las propiedades y métodos de los objetos, podemos escribir código más elegante y fácil de mantener. Espero que este artículo haya sido útil para comprender mejor los objetos en JavaScript. ¡Gracias por leer!"}]},{type:a,tag:"style",children:[{type:c,value:".ct-bae4b4{color:#6A9955}\n.ct-879575{color:#DCDCAA}\n.ct-70d061{color:#B5CEA8}\n.ct-638fc6{color:#CE9178}\n.ct-996ddb{color:#9CDCFE}\n.ct-befc13{color:#4FC1FF}\n.ct-ca4c98{color:#D4D4D4}\n.ct-d807d5{color:#569CD6}"}]}],toc:{title:i,searchDepth:s,depth:s,links:[{id:N,depth:s,text:O},{id:X,depth:s,text:Y},{id:ab,depth:s,text:ac},{id:ae,depth:s,text:af}]}},_type:"markdown",_id:"content:1.JavaScript-for-frameworks:5.objetos.md",_source:"content",_file:"1.JavaScript-for-frameworks\u002F5.objetos.md",_extension:"md"}},prerenderedAt:1676995334294}}("element","span","text","ct-ca4c98","line","ct-996ddb","code",false,"","p"," ","persona","ct-638fc6",".","jsx",null,"pre","ct-879575",2,"ct-d807d5","  ","h2","console","log","(","ct-bae4b4","Objetos en JavaScript","const","ct-befc13",",","[","JavaScript para aprender un Framework","\u002Fjavascript-for-frameworks","\u002Fjavascript-for-frameworks\u002Fobjetos","🤍","Aprende los conceptos necesarios para empezar a usar un framework basado en JavaScript, en este caso Vue.","@doneber","https:\u002F\u002Fgithub.com\u002Fdoneber","En JavaScript, los objetos son una estructura de datos muy importante y flexible que nos permite almacenar y organizar información de una manera muy útil. En este artículo, vamos a explorar qué son los objetos en JavaScript, cómo se crean y cómo se utilizan para hacer nuestro código más eficiente y organizado.","creación-de-objetos","Creación de objetos"," = {","nombre:","'Juan'","edad:","ct-70d061","30","}",";","acceso-a-las-propiedades-del-objeto","Acceso a las propiedades del objeto","nombre","\u002F\u002F Juan","]); ","propiedad","métodos-de-los-objetos","Métodos de los objetos","saludar","conclusión","Conclusión"))