export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax){return {data:{"/javascript-for-frameworks/asincronismo":[{title:S,_path:T,children:[{title:"EcmaScript y JS",_path:"\u002Fjavascript-for-frameworks\u002Fecmascript",seen:j},{title:"Operadores Ternarios",_path:"\u002Fjavascript-for-frameworks\u002Foperadores-ternarios",seen:j},{title:"Expresiones Vs Declaraciones",_path:"\u002Fjavascript-for-frameworks\u002Fexpresiones-vs-declaraciones",seen:j},{title:"Metodos De Arreglos",_path:"\u002Fjavascript-for-frameworks\u002Fmetodos-de-arreglos",seen:j},{title:"Objetos en JavaScript",_path:"\u002Fjavascript-for-frameworks\u002Fobjetos",seen:j},{title:"Json",_path:"\u002Fjavascript-for-frameworks\u002Fjson",seen:j},{title:"Modulos",_path:"\u002Fjavascript-for-frameworks\u002Fmodulos",seen:j},{title:U,_path:V,seen:j},{title:S,_path:T,icon:W,description:X,author:{name:Y,url:Z}}],icon:W,description:X,author:{name:Y,url:Z}}],"content-query-q2bqs5iyWN":{_path:V,_dir:"javascript-for-frameworks",_draft:j,_partial:j,_locale:x,_empty:j,title:U,description:_,body:{type:"root",children:[{type:a,tag:k,props:{},children:[{type:b,value:_}]},{type:a,tag:B,props:{id:$},children:[{type:b,value:aa}]},{type:a,tag:k,props:{},children:[{type:b,value:"Las promesas son una forma de manejar tareas asíncronas en JavaScript. Una promesa es un objeto que representa una tarea que puede completarse ahora, en el futuro o nunca. Las promesas tienen tres estados: pendiente, cumplida y rechazada. Una promesa pendiente significa que la tarea aún no se ha completado. Una promesa cumplida significa que la tarea se ha completado satisfactoriamente. Una promesa rechazada significa que la tarea no se pudo completar."}]},{type:a,tag:k,props:{},children:[{type:b,value:"Las promesas se crean usando el constructor Promise. El constructor acepta una función que tiene dos parámetros: resolve y reject. Resolve se llama cuando la tarea se completa satisfactoriamente y reject se llama cuando la tarea no se puede completar. Veamos un ejemplo:"}]},{type:a,tag:r,props:{code:"const promesa = new Promise((resolve, reject) =\u003E {\n  setTimeout(() =\u003E {\n    resolve('La tarea se ha completado satisfactoriamente');\n  }, 2000);\n});\n\npromesa.then((mensaje) =\u003E {\n  console.log(mensaje);\n}).catch((error) =\u003E {\n  console.error(error);\n});\n\n",language:F,meta:G},children:[{type:a,tag:H,props:{},children:[{type:a,tag:r,props:{__ignoreMap:x},children:[{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:i},children:[{type:b,value:ab}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:l}]},{type:a,tag:c,props:{class:ac},children:[{type:b,value:ad}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:ae}]},{type:a,tag:c,props:{class:i},children:[{type:b,value:af}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:l}]},{type:a,tag:c,props:{class:ag},children:[{type:b,value:ah}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:y}]},{type:a,tag:c,props:{class:g},children:[{type:b,value:C}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:ai}]},{type:a,tag:c,props:{class:g},children:[{type:b,value:aj}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:z}]},{type:a,tag:c,props:{class:i},children:[{type:b,value:p}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:n}]}]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:q}]},{type:a,tag:c,props:{class:h},children:[{type:b,value:I}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:J}]},{type:a,tag:c,props:{class:i},children:[{type:b,value:p}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:n}]}]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{class:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:o}]},{type:a,tag:c,props:{class:K},children:[{type:b,value:L}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:m}]}]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:ak}]},{type:a,tag:c,props:{class:M},children:[{type:b,value:N}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:m}]}]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:O}]}]},{type:a,tag:e,props:{class:f},children:[]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:g},children:[{type:b,value:ad}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:t}]},{type:a,tag:c,props:{class:h},children:[{type:b,value:"then"}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:y}]},{type:a,tag:c,props:{class:g},children:[{type:b,value:u}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:z}]},{type:a,tag:c,props:{class:i},children:[{type:b,value:p}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:n}]}]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:q}]},{type:a,tag:c,props:{class:g},children:[{type:b,value:A}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:t}]},{type:a,tag:c,props:{class:h},children:[{type:b,value:P}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:o}]},{type:a,tag:c,props:{class:g},children:[{type:b,value:u}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:m}]}]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:"})."}]},{type:a,tag:c,props:{class:h},children:[{type:b,value:al}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:y}]},{type:a,tag:c,props:{class:g},children:[{type:b,value:v}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:z}]},{type:a,tag:c,props:{class:i},children:[{type:b,value:p}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:n}]}]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:q}]},{type:a,tag:c,props:{class:g},children:[{type:b,value:A}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:t}]},{type:a,tag:c,props:{class:h},children:[{type:b,value:v}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:o}]},{type:a,tag:c,props:{class:g},children:[{type:b,value:v}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:m}]}]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:O}]}]}]}]}]},{type:a,tag:k,props:{},children:[{type:b,value:"En este ejemplo, creamos una promesa que se completa después de dos segundos. Si la promesa se completa satisfactoriamente, el mensaje 'La tarea se ha completado satisfactoriamente' se muestra en la consola. Si la promesa se rechaza, se muestra un mensaje de error."}]},{type:a,tag:B,props:{id:am},children:[{type:b,value:an}]},{type:a,tag:k,props:{},children:[{type:b,value:"Async \u002F Await es una forma más moderna de manejar tareas asíncronas en JavaScript. Async \u002F Await utiliza promesas para manejar tareas asíncronas, pero evita el anidamiento excesivo de promesas que puede ocurrir con el uso de then y catch. Async \u002F Await hace que el código sea más fácil de leer y entender."}]},{type:a,tag:k,props:{},children:[{type:b,value:"Para usar Async \u002F Await, debemos marcar la función como asíncrona usando la palabra clave async. Dentro de la función, podemos usar la palabra clave await para esperar a que se complete una tarea asíncrona. Veamos un ejemplo:"}]},{type:a,tag:r,props:{code:"async function tarea() {\n  return new Promise((resolve, reject) =\u003E {\n    setTimeout(() =\u003E {\n      resolve('La tarea se ha completado satisfactoriamente');\n    }, 2000);\n  });\n}\n\nasync function ejecutarTarea() {\n  try {\n    const mensaje = await tarea();\n    console.log(mensaje);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nejecutarTarea();\n\n",language:F,meta:G},children:[{type:a,tag:H,props:{},children:[{type:a,tag:r,props:{__ignoreMap:x},children:[{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:i},children:[{type:b,value:ao}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:l}]},{type:a,tag:c,props:{class:i},children:[{type:b,value:Q}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:l}]},{type:a,tag:c,props:{class:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:ap}]}]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:q}]},{type:a,tag:c,props:{class:E},children:[{type:b,value:"return"}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:l}]},{type:a,tag:c,props:{class:i},children:[{type:b,value:af}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:l}]},{type:a,tag:c,props:{class:ag},children:[{type:b,value:ah}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:y}]},{type:a,tag:c,props:{class:g},children:[{type:b,value:C}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:ai}]},{type:a,tag:c,props:{class:g},children:[{type:b,value:aj}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:z}]},{type:a,tag:c,props:{class:i},children:[{type:b,value:p}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:n}]}]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{class:h},children:[{type:b,value:I}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:J}]},{type:a,tag:c,props:{class:i},children:[{type:b,value:p}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:n}]}]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:"      "}]},{type:a,tag:c,props:{class:h},children:[{type:b,value:C}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:o}]},{type:a,tag:c,props:{class:K},children:[{type:b,value:L}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:m}]}]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:"    }, "}]},{type:a,tag:c,props:{class:M},children:[{type:b,value:N}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:m}]}]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:"  });"}]}]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:R}]}]},{type:a,tag:e,props:{class:f},children:[]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:i},children:[{type:b,value:ao}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:l}]},{type:a,tag:c,props:{class:i},children:[{type:b,value:Q}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:l}]},{type:a,tag:c,props:{class:h},children:[{type:b,value:aq}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:ap}]}]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:q}]},{type:a,tag:c,props:{class:E},children:[{type:b,value:"try"}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:n}]}]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{class:i},children:[{type:b,value:ab}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:l}]},{type:a,tag:c,props:{class:ac},children:[{type:b,value:u}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:ae}]},{type:a,tag:c,props:{class:E},children:[{type:b,value:"await"}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:l}]},{type:a,tag:c,props:{class:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:ar}]}]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{class:g},children:[{type:b,value:A}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:t}]},{type:a,tag:c,props:{class:h},children:[{type:b,value:P}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:o}]},{type:a,tag:c,props:{class:g},children:[{type:b,value:u}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:m}]}]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:"  } "}]},{type:a,tag:c,props:{class:E},children:[{type:b,value:al}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:" ("}]},{type:a,tag:c,props:{class:g},children:[{type:b,value:v}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:as}]}]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{class:g},children:[{type:b,value:A}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:t}]},{type:a,tag:c,props:{class:h},children:[{type:b,value:v}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:o}]},{type:a,tag:c,props:{class:g},children:[{type:b,value:v}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:m}]}]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:"  }"}]}]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:R}]}]},{type:a,tag:e,props:{class:f},children:[]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:h},children:[{type:b,value:aq}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:ar}]}]}]}]}]},{type:a,tag:k,props:{},children:[{type:b,value:"En este ejemplo, creamos dos funciones: tarea y ejecutarTarea. La función tarea devuelve una promesa que se completa después de dos segundos. La función ejecutarTarea es asíncrona y usa la palabra clave await para esperar a que se complete la tarea. Si la tarea se completa satisfactoriamente, el mensaje 'La tarea se ha completado satisfactoriamente' se muestra en la consola. Si la tarea se rechaza, se muestra un mensaje de error."}]},{type:a,tag:B,props:{id:at},children:[{type:b,value:au}]},{type:a,tag:k,props:{},children:[{type:b,value:"Los callbacks son una forma antigua de manejar tareas asíncronas en JavaScript. Un callback es una función que se pasa como argumento a otra función y se ejecuta después de que se complete una tarea asíncrona. Los callbacks pueden ser difíciles de leer y entender, especialmente cuando se anidan varios callbacks."}]},{type:a,tag:k,props:{},children:[{type:b,value:"Veamos un ejemplo:"}]},{type:a,tag:r,props:{code:"function tarea(callback) {\n  setTimeout(() =\u003E {\n    callback('La tarea se ha completado satisfactoriamente');\n  }, 2000);\n}\n\ntarea((mensaje) =\u003E {\n  console.log(mensaje);\n});\n\n",language:F,meta:G},children:[{type:a,tag:H,props:{},children:[{type:a,tag:r,props:{__ignoreMap:x},children:[{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:i},children:[{type:b,value:Q}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:l}]},{type:a,tag:c,props:{class:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:o}]},{type:a,tag:c,props:{class:g},children:[{type:b,value:av}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:as}]}]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:q}]},{type:a,tag:c,props:{class:h},children:[{type:b,value:I}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:J}]},{type:a,tag:c,props:{class:i},children:[{type:b,value:p}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:n}]}]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:s}]},{type:a,tag:c,props:{class:h},children:[{type:b,value:av}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:o}]},{type:a,tag:c,props:{class:K},children:[{type:b,value:L}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:m}]}]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:ak}]},{type:a,tag:c,props:{class:M},children:[{type:b,value:N}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:m}]}]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:R}]}]},{type:a,tag:e,props:{class:f},children:[]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:h},children:[{type:b,value:D}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:y}]},{type:a,tag:c,props:{class:g},children:[{type:b,value:u}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:z}]},{type:a,tag:c,props:{class:i},children:[{type:b,value:p}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:n}]}]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:q}]},{type:a,tag:c,props:{class:g},children:[{type:b,value:A}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:t}]},{type:a,tag:c,props:{class:h},children:[{type:b,value:P}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:o}]},{type:a,tag:c,props:{class:g},children:[{type:b,value:u}]},{type:a,tag:c,props:{class:d},children:[{type:b,value:m}]}]},{type:a,tag:e,props:{class:f},children:[{type:a,tag:c,props:{class:d},children:[{type:b,value:O}]}]}]}]}]},{type:a,tag:k,props:{},children:[{type:b,value:"En este ejemplo, creamos una función tarea que toma un callback como argumento. La función tarea llama al callback después de dos segundos y pasa el mensaje 'La tarea se ha completado satisfactoriamente'. El callback se ejecuta y muestra el mensaje en la consola."}]},{type:a,tag:B,props:{id:aw},children:[{type:b,value:ax}]},{type:a,tag:k,props:{},children:[{type:b,value:"El asincronismo es una característica importante de JavaScript que permite que un programa pueda continuar ejecutando otras tareas mientras espera que se complete una tarea específica. Las promesas, Async \u002F Await y los callbacks son formas de manejar tareas asíncronas en JavaScript. Las promesas y Async \u002F Await son más modernas y fáciles de leer y entender, mientras que los callbacks son una forma antigua y pueden ser difíciles de leer y entender, especialmente cuando se anidan varios callbacks. Es importante entender cómo manejar tareas asíncronas en JavaScript para escribir código más eficiente y escalable. ¡Espero que este artículo te haya ayudado a entender el asincronismo en JavaScript para principiantes!"}]},{type:a,tag:"style",children:[{type:b,value:".ct-568382{color:#C586C0}\n.ct-b82941{color:#B5CEA8}\n.ct-bb5855{color:#CE9178}\n.ct-eb0c77{color:#DCDCAA}\n.ct-bb87da{color:#9CDCFE}\n.ct-ebc7bd{color:#4EC9B0}\n.ct-3e721e{color:#4FC1FF}\n.ct-5ce632{color:#D4D4D4}\n.ct-67410b{color:#569CD6}"}]}],toc:{title:x,searchDepth:w,depth:w,links:[{id:$,depth:w,text:aa},{id:am,depth:w,text:an},{id:at,depth:w,text:au},{id:aw,depth:w,text:ax}]}},_type:"markdown",_id:"content:1.JavaScript-for-frameworks:8.asincronismo.md",_source:"content",_file:"1.JavaScript-for-frameworks\u002F8.asincronismo.md",_extension:"md"}},prerenderedAt:1681218329156}}("element","text","span","ct-5ce632","div","line","ct-bb87da","ct-eb0c77","ct-67410b",false,"p"," ",");"," {","(","=\u003E","  ","code","    ",".","mensaje","error",2,"","((",") ","console","h2","resolve","tarea","ct-568382","jsx",null,"pre","setTimeout","(() ","ct-bb5855","'La tarea se ha completado satisfactoriamente'","ct-b82941","2000","});","log","function","}","JavaScript para aprender un Framework","\u002Fjavascript-for-frameworks","Asincronismo","\u002Fjavascript-for-frameworks\u002Fasincronismo","🤍","Aprende los conceptos necesarios para empezar a usar un framework basado en JavaScript, en este caso Vue.","@doneber","https:\u002F\u002Fgithub.com\u002Fdoneber","JavaScript es un lenguaje de programación que se utiliza en el desarrollo web y que se ejecuta en el navegador del usuario. Una de las características más importantes de JavaScript es su capacidad para manejar tareas asíncronas. El asincronismo permite que un programa pueda continuar ejecutando otras tareas mientras espera que se complete una tarea específica. En este artículo, hablaremos sobre el asincronismo en JavaScript para principiantes.","promesas","Promesas","const","ct-3e721e","promesa"," = ","new","ct-ebc7bd","Promise",", ","reject","  }, ","catch","async-await","Async \u002F Await","async","() {","ejecutarTarea","();",") {","callbacks","Callbacks","callback","conclusión","Conclusión"))